/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedBoardsImport } from './routes/_authenticated/boards'
import { Route as AuthenticatedBoardBoardIdImport } from './routes/_authenticated/board/$boardId'

// Create Virtual Routes

const ThemeLazyImport = createFileRoute('/theme')()
const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ThemeLazyRoute = ThemeLazyImport.update({
  path: '/theme',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/theme.lazy').then((d) => d.Route))

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthenticatedBoardsRoute = AuthenticatedBoardsImport.update({
  path: '/boards',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedBoardBoardIdRoute = AuthenticatedBoardBoardIdImport.update({
  path: '/board/$boardId',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/theme': {
      id: '/theme'
      path: '/theme'
      fullPath: '/theme'
      preLoaderRoute: typeof ThemeLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/boards': {
      id: '/_authenticated/boards'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof AuthenticatedBoardsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/board/$boardId': {
      id: '/_authenticated/board/$boardId'
      path: '/board/$boardId'
      fullPath: '/board/$boardId'
      preLoaderRoute: typeof AuthenticatedBoardBoardIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedBoardsRoute: typeof AuthenticatedBoardsRoute
  AuthenticatedBoardBoardIdRoute: typeof AuthenticatedBoardBoardIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedBoardsRoute: AuthenticatedBoardsRoute,
  AuthenticatedBoardBoardIdRoute: AuthenticatedBoardBoardIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/theme': typeof ThemeLazyRoute
  '/boards': typeof AuthenticatedBoardsRoute
  '/board/$boardId': typeof AuthenticatedBoardBoardIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/theme': typeof ThemeLazyRoute
  '/boards': typeof AuthenticatedBoardsRoute
  '/board/$boardId': typeof AuthenticatedBoardBoardIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/theme': typeof ThemeLazyRoute
  '/_authenticated/boards': typeof AuthenticatedBoardsRoute
  '/_authenticated/board/$boardId': typeof AuthenticatedBoardBoardIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/theme'
    | '/boards'
    | '/board/$boardId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/theme'
    | '/boards'
    | '/board/$boardId'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/register'
    | '/theme'
    | '/_authenticated/boards'
    | '/_authenticated/board/$boardId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginLazyRoute: typeof LoginLazyRoute
  RegisterLazyRoute: typeof RegisterLazyRoute
  ThemeLazyRoute: typeof ThemeLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginLazyRoute: LoginLazyRoute,
  RegisterLazyRoute: RegisterLazyRoute,
  ThemeLazyRoute: ThemeLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/login",
        "/register",
        "/theme"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/boards",
        "/_authenticated/board/$boardId"
      ]
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    },
    "/theme": {
      "filePath": "theme.lazy.tsx"
    },
    "/_authenticated/boards": {
      "filePath": "_authenticated/boards.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/board/$boardId": {
      "filePath": "_authenticated/board/$boardId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
